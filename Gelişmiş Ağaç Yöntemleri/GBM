#GBM

rf_best_grid= GridSearchCV(rf_model, rf_params, cv=5, n_jobs=-1,verbose=True).fit(X,y)

rf_best_grid.best_params_
rf_final = rf_model.set_params(**rf_best_grid.best_params_,random_state=17).fit(X,y)

gbm_model= GradientBoostingClassifier(random_state=17)
gbm_model.get_params()

cv_results = cross_validate(gbm_model, X, y, cv=5, scoring=["accuracy","f1","roc_auc"])
cv_results['test_accuracy'].mean()
cv_results['test_f1'].mean()
cv_results["test_roc_auc"].mean()

gbm_params = {"learning_rate":[0.01,0.1],
              "max_depth":[3,8,10],
              "n_estimators":[100,500,1000],
              "subsample":[1,0.5,0.7]}

gbm_best_grid =GridSearchCV(gbm_model, gbm_params,cv= 5, n_jobs=-1,verbose=True).fit(X,y)
gbm_best_grid.best_params_

gbm_final= gbm_model.set_params(**gbm_best_grid.best_params_, random_state=17).fit(X,y)


cv_results = cross_validate(gbm_final, X, y, cv=5, scoring=["accuracy","f1","roc_auc"])
cv_results['test_accuracy'].mean()
cv_results['test_f1'].mean()
cv_results["test_roc_auc"].mean()
