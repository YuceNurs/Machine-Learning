import warnings
import numpy as np
import pandas as pd
import seaborn as sns
from matplotlib import pyplot as plt
from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, VotingClassifier
from sklearn.model_selection import GridSearchCV, cross_validate, RandomizedSearchCV, validation_curve
from xgboost import XGBClassifier
from lightgbm import LGBMClassifier
from catboost import CatBoostClassifier

#pip install xgboost
#pip install lightgbm
#pip install catboost

pd.set_option('display.max_columns', None)
warnings.simplefilter(action='ignore',category=warnings)

df = pd.read_csv("C:\Program Files\python\diabetes\diabetes.csv")

y= df["Outcome"]
X=df.drop(["Outcome"], axis= 1)

rf_model =RandomForestClassifier(random_state=17)
rf_model.get_params()
print(rf_model.get_params())

rf_params={"max_depth":[5,8, None],
           "max_features":[3,5,7,"sqrt"],
           "min_samples_split":[2,5,8,15,20],
           "n_estimators":[100,200,500]}

rf_best_grid= GridSearchCV(rf_model, rf_params, cv=5, n_jobs=-1,verbose=True).fit(X,y)

rf_best_grid.best_params_
rf_final = rf_model.set_params(**rf_best_grid.best_params_,random_state=17).fit(X,y)
